<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="es"><generator uri="https://jekyllrb.com/" version="3.5.1">Jekyll</generator><link href="http://blog.makeitreal.camp/feed.xml" rel="self" type="application/atom+xml" /><link href="http://blog.makeitreal.camp/" rel="alternate" type="text/html" hreflang="es" /><updated>2017-08-02T16:11:11-05:00</updated><id>http://blog.makeitreal.camp/</id><title type="html">El Blog de Make it Real</title><subtitle>Un espacio para compartir conocimiento en programación y emprendimiento.</subtitle><entry><title type="html">Arriesgarlo todo por cumplir nuestras metas y sueños</title><link href="http://blog.makeitreal.camp/arriesgarlo-todo-por-cumplir-nuestras-metas-y-suenos/" rel="alternate" type="text/html" title="Arriesgarlo todo por cumplir nuestras metas y sueños" /><published>2017-07-30T06:00:00-05:00</published><updated>2017-07-30T06:00:00-05:00</updated><id>http://blog.makeitreal.camp/arriesgarlo-todo-por-cumplir-nuestras-metas-y-suenos</id><content type="html" xml:base="http://blog.makeitreal.camp/arriesgarlo-todo-por-cumplir-nuestras-metas-y-suenos/">&lt;p&gt;Todo empezó por simple curiosidad. ¿Que significaba la programación? ¿Cómo era posible que las personas construyeran algo tan grande simplemente con palabras? ¿Cómo así que con palabras?&lt;!-- more --&gt;&lt;/p&gt;

&lt;p&gt;Antes de saber cómo funcionaba más a fondo la programación no me explicaba lógicamente cómo estas palabras se podían transformar en un proyecto de vida que literalmente me cambio la vida y mi forma de pensar.&lt;/p&gt;

&lt;p&gt;Hace unos años la mejor decisión hubiese sido continuar en un trabajo estable e ir ganando posiciones en una compañía. Pero ¿cuál era la participación de la felicidad frente a lo que estaba haciendo? La verdad es que iba disminuyendo con el pasar del tiempo. Los retos que se presentaban eran cada vez más operativos, mas monótonos.&lt;/p&gt;

&lt;p&gt;Lo que me motivó a dar el salto fue ver tanta gente cambiando el mundo, desarrollando nuevas soluciones. ¿Y yo qué estaba haciendo? Lo mismo del día anterior, del anterior a ese y el de un año atrás.&lt;/p&gt;

&lt;p&gt;En ese momento fue que empecé a estudiar programación en un curso online donde pude identificar que, en este sector, la monotonía era mínima. Pueden existir miles de maneras de solucionar un problema y el único limitante es ¿hasta dónde estoy dispuesto a aprender? ¿quiero seguir hasta tener la mejor solución o con una solución que funciona y no es óptima es suficiente para mí?&lt;/p&gt;

&lt;p&gt;Después de este curso inicial empecé con un emprendimiento, con los conocimientos básicos que tenía, donde aprendí por mi cuenta Angular y Firebase (que utilice de base de datos).&lt;/p&gt;

&lt;p&gt;Al encontrar los límites de Firebase fue donde decidí empezar un nuevo curso donde pudiera aprender algún lenguaje para poder realizar el back end de mi aplicación, y fue cuando ingrese a Make it Real. Ahí fue donde sentí que mi conocimiento tuvo el primer gran impulso, permitiéndome aprender mucho más fácil por medio de la metodología implementada, totalmente diferente al primer curso en donde se replicaba los videos del profesor (todo era perfecto), lo cuál hace que se cierre el poder de investigación, que es el método más útil para aprender, porque viene un paso después de aprender haciendo, que es donde se crean los interrogantes.&lt;/p&gt;

&lt;p&gt;A medida que mis conocimientos mejoraban iba encontrando que los problemas que me causaban dificultad antes eran mucho más fáciles de solucionar ahora. Además, me iba dando cuenta que este era el camino que quería tomar para mi vida.&lt;/p&gt;

&lt;p&gt;Cuando veía que en el mercado había una solución nueva para los diferentes tipos de problemas era donde más me motivaba a tomar la decisión definitiva de hacer un cambio en mi vida: pasar de ser Analista Financiero a ser un gran Desarrollador.&lt;/p&gt;

&lt;h2 id=&quot;llegó-el-momento-de-todo-o-nada&quot;&gt;Llegó el momento de todo o nada&lt;/h2&gt;

&lt;p&gt;Luego de ahorrar unos meses fue que decidí tomar el gran salto de dejar el camino seguro, para dedicarme tiempo completo en lo que empezó como un hobby y se convirtió en una pasión. Esta decisión fue más fácil de tomar gracias al acompañamiento del equipo de Make it Real donde empecé a dedicarme tiempo completo a mi aprendizaje y poder ser cada vez mejor para desarrollar soluciones novedosas y tecnológicas que son necesarias para el mundo de hoy, donde los retos son infinitos y hacen falta personas con deseo de romper los paradigmas actuales.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Alejandro Estrada hace parte de nuestro programa Elite (actualmente en Beta) y está documentando todo su aprendizaje en su &lt;a href=&quot;https://medium.com/@estrada9166&quot; target=&quot;_blank&quot;&gt;blog personal&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;</content><author><name>Alejandro Estrada</name></author><summary type="html">Todo empezó por simple curiosidad. ¿Que significaba la programación? ¿Cómo era posible que las personas construyeran algo tan grande simplemente con palabras? ¿Cómo así que con palabras?</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://blog.makeitreal.camp/assets/images/bg-images/metas-y-suenos.jpeg" /></entry><entry><title type="html">Responsive design: media queries</title><link href="http://blog.makeitreal.camp/responsive-design-media-queries/" rel="alternate" type="text/html" title="Responsive design: media queries" /><published>2017-07-26T06:00:00-05:00</published><updated>2017-07-26T06:00:00-05:00</updated><id>http://blog.makeitreal.camp/responsive-design-media-queries</id><content type="html" xml:base="http://blog.makeitreal.camp/responsive-design-media-queries/">&lt;p&gt;En este post hablaremos sobre media queries, una característica de CSS3 que nos permite crear sitios y aplicaciones Web que se adaptan a diferentes tipos de pantallas.&lt;!-- more --&gt;&lt;/p&gt;

&lt;p&gt;A través de &lt;strong&gt;media queries&lt;/strong&gt; podemos definir &lt;strong&gt;reglas CSS&lt;/strong&gt; (estilos) que se activan cuando ciertas condiciones se cumplen, por ejemplo cuando el ancho de la pantalla sea mayor a cierto tamaño.&lt;/p&gt;

&lt;p&gt;Un &lt;strong&gt;media query&lt;/strong&gt; se declara utilizando la palabra clave &lt;code class=&quot;highlighter-rouge&quot;&gt;@media&lt;/code&gt; seguido de una expresión entre paréntesis y un bloque de &lt;strong&gt;reglas CSS&lt;/strong&gt; como se muestra a continuación:&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;@media&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;min-width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;992px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;/* acá van las reglas CSS que aplican para este media query */&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Las &lt;strong&gt;reglas CSS&lt;/strong&gt; se activan únicamente cuando se cumple la expresión que está entre paréntesis. En este caso la expresión es &lt;code class=&quot;highlighter-rouge&quot;&gt;min-width: 992px&lt;/code&gt;, es decir, cuando la pantalla tiene un ancho igual o superior a 992 pixeles.&lt;/p&gt;

&lt;p&gt;Además de &lt;code class=&quot;highlighter-rouge&quot;&gt;min-width&lt;/code&gt; también existe &lt;code class=&quot;highlighter-rouge&quot;&gt;max-width&lt;/code&gt; para definir el ancho máximo de la pantalla para el que aplica el &lt;strong&gt;media query&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Por ejemplo, si queremos que el color de fondo sea rojo cuando el ancho de la pantalla sea de máximo 700 pixeles podemos hacer lo siguiente:&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;@media&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;max-width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;700px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;body&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;background-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;red&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Ingresa a &lt;a href=&quot;https://codepen.io/germanescobar/pen/qXEgJj?editors=0100&quot; target=&quot;_blank&quot;&gt;este enlace&lt;/a&gt; para ver y jugar con este ejemplo. Cambia el ancho del área donde se muestra el resultado para ver en qué punto cambia el color de fondo.&lt;/p&gt;

&lt;h2 id=&quot;puntos-de-quiebre-breakpoints&quot;&gt;Puntos de quiebre (breakpoints)&lt;/h2&gt;

&lt;p&gt;Los puntos de quiebre (o breakpoints) son los anchos (en pixeles) en los que ocurren cambios en nuestra página para que se adapte a diferentes pantallas.&lt;/p&gt;

&lt;p&gt;En vez de utilizar los valores que se nos ocurran para los anchos de diferentes pantallas, se han definido ciertos valores para determinar el tipo de pantalla que se está usando:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Hasta &lt;code class=&quot;highlighter-rouge&quot;&gt;575px&lt;/code&gt; son teléfonos móviles en modo vertical.&lt;/li&gt;
  &lt;li&gt;De &lt;code class=&quot;highlighter-rouge&quot;&gt;576px&lt;/code&gt; a &lt;code class=&quot;highlighter-rouge&quot;&gt;767px&lt;/code&gt; son teléfonos móviles en modo horizontal.&lt;/li&gt;
  &lt;li&gt;De &lt;code class=&quot;highlighter-rouge&quot;&gt;768px&lt;/code&gt; a &lt;code class=&quot;highlighter-rouge&quot;&gt;991px&lt;/code&gt; son tabletas.&lt;/li&gt;
  &lt;li&gt;De &lt;code class=&quot;highlighter-rouge&quot;&gt;992px&lt;/code&gt; a &lt;code class=&quot;highlighter-rouge&quot;&gt;1199px&lt;/code&gt; son pantallas de escritorio normales.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;1200px&lt;/code&gt; o más son pantallas grandes como televisores.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Sin embargo, cuando hablamos de &lt;strong&gt;puntos de quiebre&lt;/strong&gt; nos referimos a un ancho específico, por ejemplo &lt;code class=&quot;highlighter-rouge&quot;&gt;768px&lt;/code&gt;, que es el momento en el que cambia la pantalla de teléfono móvil a tableta.&lt;/p&gt;

&lt;p&gt;Estos valores son sólo una referencia. El ancho de la mayoría de pantallas de escritorio hoy en día, por ejemplo, es de más de &lt;code class=&quot;highlighter-rouge&quot;&gt;1200px&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;A continuación veremos cómo utilizar estos puntos de quiebre para crear aplicaciones que se adaptan a diferentes pantallas.&lt;/p&gt;

&lt;h2 id=&quot;mobile-first&quot;&gt;Mobile first&lt;/h2&gt;

&lt;p&gt;¿Dónde ubicamos y cómo organizamos los &lt;strong&gt;media quieries&lt;/strong&gt; en nuestros archivos CSS? Lo que se recomienda es utilizar una estrategia llamada &lt;strong&gt;mobile first&lt;/strong&gt; en donde primero se definen las reglas dirigidas a teléfonos móviles y con &lt;strong&gt;media queries&lt;/strong&gt; ajustamos el contenido para pantallas más anchas.&lt;/p&gt;

&lt;p&gt;Veamos un ejemplo. Imagina que queremos ir incrementando el tamaño de la letra de acuerdo al ancho de la pantalla:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;14px&lt;/code&gt; en teléfonos móviles.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;15px&lt;/code&gt; para tabletas.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;16px&lt;/code&gt; para pantallas de escritorio normales.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;17px&lt;/code&gt; para pantallas grandes.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Lo primero que vamos a definir es el estilo para telefonos móviles y después utilizamos &lt;strong&gt;media queries&lt;/strong&gt; para los demás:&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;/* mobile first */&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;body&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;font-size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;14px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;/* tabletas */&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;@media&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;min-width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;768px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;body&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;font-size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;15px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;/* escritorio normales */&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;@media&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;min-width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;992px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;body&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;font-size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;16px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;/* pantallas grandes */&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;@media&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;min-width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1200px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;body&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;font-size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;17px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Primero estamos definiendo el tamaño por defecto de &lt;code class=&quot;highlighter-rouge&quot;&gt;14px&lt;/code&gt;. Después utilizamos un &lt;strong&gt;media query&lt;/strong&gt; con expresión &lt;code class=&quot;highlighter-rouge&quot;&gt;min-width: 768px&lt;/code&gt; que cambia el tamaño a &lt;code class=&quot;highlighter-rouge&quot;&gt;15px&lt;/code&gt;, sobrescribiendo el valor anterior. Lo mismo ocurre con los otros dos &lt;strong&gt;media queries&lt;/strong&gt;: si se activan sobrescriben el valor anterior.&lt;/p&gt;

&lt;p&gt;Por ejemplo, si el ancho de la pantalla es de &lt;code class=&quot;highlighter-rouge&quot;&gt;1000px&lt;/code&gt; esto es lo que ocurre:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;El navegador encuentra el tamaño por defecto de &lt;code class=&quot;highlighter-rouge&quot;&gt;14px&lt;/code&gt; y lo aplica.&lt;/li&gt;
  &lt;li&gt;Encuentra el primer &lt;strong&gt;media query&lt;/strong&gt; con expresión &lt;code class=&quot;highlighter-rouge&quot;&gt;min-width: 768px&lt;/code&gt; y, como la pantalla supera los &lt;code class=&quot;highlighter-rouge&quot;&gt;768px&lt;/code&gt;, sobrescribe el tamaño de la letra que queda con un valor de &lt;code class=&quot;highlighter-rouge&quot;&gt;15px&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Continúa con el segundo &lt;strong&gt;media query&lt;/strong&gt; con expresión &lt;code class=&quot;highlighter-rouge&quot;&gt;min-width: 992px&lt;/code&gt; y de nuevo sobrescribe el tamaño de la letra que queda con un valor de &lt;code class=&quot;highlighter-rouge&quot;&gt;16px&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Por último, evalúa el último &lt;strong&gt;media query&lt;/strong&gt; con expresión &lt;code class=&quot;highlighter-rouge&quot;&gt;min-width: 1200px&lt;/code&gt;, pero esta condición no se cumple, así que lo ignora.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Al final el tamaño de la letra que se va a utilizar es &lt;code class=&quot;highlighter-rouge&quot;&gt;16px&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Ten mucho cuidado con el orden. Si por ejemplo, movieramos el valor por defecto al final, después de todos los otros &lt;strong&gt;media queries&lt;/strong&gt;, la letra siempre quedaría de &lt;code class=&quot;highlighter-rouge&quot;&gt;14px&lt;/code&gt;. ¿Puedes explicar por qué?&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Espero que esta introducción te haya ayudado a entender qué son y cómo funcionan los &lt;strong&gt;media queries&lt;/strong&gt;. Aunque existen otras características que puedes utilizar para describir las pantallas (como el alto y la orientación), las opciones que vimos en este post (&lt;code class=&quot;highlighter-rouge&quot;&gt;min-width&lt;/code&gt; y &lt;code class=&quot;highlighter-rouge&quot;&gt;max-width&lt;/code&gt;) son las más comunes y un excelente punto de partida.&lt;/p&gt;

&lt;p&gt;Los &lt;strong&gt;media queries&lt;/strong&gt; son el componente fundamental de &lt;strong&gt;responsive design&lt;/strong&gt;, pero para que una página sea completamente adaptable debes verificar también que las imágenes, videos, tablas, etc. se vean bien en todos los dispositivos.&lt;/p&gt;

&lt;p&gt;Por último, si quieres ver ejemplos de responsive design te recomiendo estos dos sitios:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://mediaqueri.es/&quot;&gt;https://mediaqueri.es/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://responsivedesign.is/examples/&quot;&gt;https://responsivedesign.is/examples/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Germán Escobar</name></author><summary type="html">En este post hablaremos sobre media queries, una característica de CSS3 que nos permite crear sitios y aplicaciones Web que se adaptan a diferentes tipos de pantallas.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://blog.makeitreal.camp/assets/images/bg-images/responsive-design.jpg" /></entry><entry><title type="html">¿Qué es concurrencia?</title><link href="http://blog.makeitreal.camp/concurrencia/" rel="alternate" type="text/html" title="¿Qué es concurrencia?" /><published>2017-07-12T12:00:00-05:00</published><updated>2017-07-12T12:00:00-05:00</updated><id>http://blog.makeitreal.camp/concurrencia</id><content type="html" xml:base="http://blog.makeitreal.camp/concurrencia/">&lt;p&gt;En este post vamos ver qué es concurrencia, cuáles son los dos modelos más populares que existen actualmente y cómo la concurrencia afecta el código que escribes.&lt;!-- more --&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Concurrencia&lt;/strong&gt; es la habilidad que tiene un computador de realizar varias tareas a la vez.&lt;/p&gt;

&lt;p&gt;Gracias a la &lt;strong&gt;concurrencia&lt;/strong&gt; es que puedes ver un video en YouTube mientas subes un archivo a Dropbox y hablas con tus amigos en Facebook, todo a la vez.&lt;/p&gt;

&lt;p&gt;Sin embargo, eso no significa necesariamente que todo pase &lt;strong&gt;al mismo tiempo&lt;/strong&gt;, es decir, en paralelo. Eso depende del número de procesadores (o cores) que tenga tu computador.&lt;/p&gt;

&lt;p&gt;Si tu computador sólo tiene un procesador, el sistema operativo &lt;strong&gt;simula&lt;/strong&gt; que está haciendo todo al mismo tiempo, pero lo que realmente hace es darle, a las aplicaciones, acceso al procesador por turnos cortos de tiempo.&lt;/p&gt;

&lt;p&gt;Existen varios modelos de concurrencia y cada lenguaje de programación implementa alguno de ellos. En este post vamos a explicar dos de ellos: &lt;strong&gt;hilos&lt;/strong&gt; (threads en Inglés), que es el modelo más básico y el que utilizan lenguajes como Java, Ruby y PHP, entre otros, y &lt;strong&gt;basado en eventos&lt;/strong&gt; (event-driven), que es el que utiliza JavaScript.&lt;/p&gt;

&lt;h2 id=&quot;io-vs-procesamiento&quot;&gt;I/O vs Procesamiento&lt;/h2&gt;

&lt;p&gt;La mayor parte del tiempo los computadores no están ejecutando código, están ocupados en operaciones de &lt;strong&gt;I/O&lt;/strong&gt; (&lt;strong&gt;Input/Output&lt;/strong&gt;)&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt; como leer un archivo, hacer llamados HTTP, esperar a que el usuario escriba algo en el teclado, etc.&lt;/p&gt;

&lt;p&gt;Por ejemplo, imagina que debemos escribir un programa que cuente cuántos links tienen tres páginas Web. Una posible solución sería la siguiente:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;overflow language-ruby&quot;&gt;contar_links(&quot;http://sitio1.com/&quot;)
contar_links(&quot;http://sitio2.com/&quot;)
contar_links(&quot;http://sitio3.com/&quot;)&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Este código se ejecuta de forma &lt;strong&gt;secuencial&lt;/strong&gt;: hasta que no termine de analizar la primera página no continúa con la segunda, y hasta que no termine con la segunda no continúa con la tercera. A esto también se le conoce como &lt;strong&gt;código sincrónico&lt;/strong&gt; porque estamos esperando que cada operación termine antes de continuar con la siguiente.&lt;/p&gt;

&lt;h2 id=&quot;threads-hilos&quot;&gt;Threads (hilos)&lt;/h2&gt;

&lt;p&gt;El problema del &lt;strong&gt;código sincrónico&lt;/strong&gt; es que, aunque es fácil de entender, no siempre hace el mejor uso de los recursos del sistema. En el ejemplo anterior sería mejor analizar las tres páginas de forma &lt;strong&gt;concurrente&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;La forma en que la mayoría de lenguajes de programación permiten escribir código concurrente es creando &lt;strong&gt;threads&lt;/strong&gt; (hilos).&lt;/p&gt;

&lt;p&gt;En vez de intentar definir exactamente qué es un &lt;strong&gt;hilo&lt;/strong&gt;, veamos un ejemplo. La sintaxis para crear &lt;strong&gt;hilos&lt;/strong&gt; varía dependiendo del lenguaje, en Ruby se crean con &lt;code class=&quot;highlighter-rouge&quot;&gt;Thread.new&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;overflow language-ruby&quot;&gt;t1 = Thread.new {
  contar_links(&quot;http://sitio1.com/&quot;)
}
t2 = Thread.new {
  contar_links(&quot;http://sitio2.com/&quot;)
}
t3 = Thread.new {
  contar_links(&quot;http://sitio3.com/&quot;)
}

# debemos esperar a que terminen los 3 archivos
t1.join
t2.join
t3.join&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;El código que está entre los corchetes de cada &lt;strong&gt;hilo&lt;/strong&gt; es lo que se va a ejecutar en algún momento en el futuro, no sabemos es en qué momento. Por esa razón al final utilizamos el método &lt;code class=&quot;highlighter-rouge&quot;&gt;join&lt;/code&gt; sobre cada &lt;strong&gt;hilo&lt;/strong&gt;, para esperar a que terminen.&lt;/p&gt;

&lt;p&gt;Aunque los &lt;strong&gt;hilos&lt;/strong&gt; se ejecutan de forma concurrente, &lt;strong&gt;no podemos decir que se van a ejecutar en paralelo&lt;/strong&gt;, eso depende del número de procesadores que tenga la máquina y, para el caso de Ruby, la implementación de Ruby que estemos utilizando&lt;sup id=&quot;fnref:2&quot;&gt;&lt;a href=&quot;#fn:2&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

&lt;p&gt;La siguiente imagen muestra la diferencia entre ejecución secuencial, concurrente y paralela:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/concurrency.png&quot; alt=&quot;Concurrencia&quot; class=&quot;photo&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Aunque los dos diagramas de la derecha son concurrentes, &lt;strong&gt;los hilos sólo se ejecutan en paralelo cuando tienes dos o más procesadores&lt;/strong&gt;.&lt;/p&gt;

&lt;h3 id=&quot;problemas-de-los-hilos&quot;&gt;Problemas de los hilos&lt;/h3&gt;

&lt;p&gt;En muchos casos utilizar &lt;strong&gt;hilos&lt;/strong&gt; es mejor que ejecutar el código de forma secuencial. Sin embargo, eso no quiere decir que sean la solución ideal.&lt;/p&gt;

&lt;p&gt;Existen tres problemas principales con la concurrencia basada en &lt;strong&gt;hilos&lt;/strong&gt;.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Es posible que los nuevos &lt;strong&gt;hilos&lt;/strong&gt; ocupen la mayor parte del tiempo en &lt;strong&gt;I/O&lt;/strong&gt;, como en nuestro ejemplo anterior.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Crear y administrar &lt;strong&gt;hilos&lt;/strong&gt; tiene un impacto en memoria y en procesamiento. El impacto de cada &lt;strong&gt;hilo&lt;/strong&gt; es bajo pero empieza a ser considerable cuando tienes miles de hilos activos.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Sincronizar varios &lt;strong&gt;hilos&lt;/strong&gt; es complicado. El problema es que todos pueden acceder a la misma información pero en diferente orden y la aplicación puede terminar en un estado inválido o quedar bloqueada en una &lt;a href=&quot;https://es.wikipedia.org/wiki/Condici%C3%B3n_de_carrera&quot; target=&quot;_blank&quot;&gt;condición de carrera&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;basado-en-eventos-event-driven&quot;&gt;Basado en eventos (event driven)&lt;/h2&gt;

&lt;p&gt;En un modelo basado en eventos, como el que usa JavaScript, el código de la aplicación se ejecuta en un único &lt;strong&gt;hilo&lt;/strong&gt; y las operaciones de &lt;strong&gt;I/O&lt;/strong&gt; se delegan a otros &lt;strong&gt;hilos&lt;/strong&gt; de apoyo.&lt;/p&gt;

&lt;p&gt;La ventaja del modelo basado en eventos es que el &lt;strong&gt;hilo principal sólo ejecuta código y nunca se bloquea por operaciones de I/O&lt;/strong&gt;. La desventaja es que el código es más difícil de escribir y entender.&lt;/p&gt;

&lt;p&gt;La siguiente imagen ilustra cómo funciona la concurrencia basada en eventos:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/async-io.png&quot; alt=&quot;Concurrencia basada en eventos&quot; class=&quot;photo&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Cada vez que hacemos operaciones de &lt;strong&gt;I/O&lt;/strong&gt;, el &lt;strong&gt;hilo principal&lt;/strong&gt; delega la operación a un &lt;strong&gt;hilo&lt;/strong&gt; de apoyo. Veamos un ejemplo en &lt;a href=&quot;https://nodejs.org/en/&quot; target=&quot;_blank&quot;&gt;Node.js&lt;/a&gt; en el que estamos leyendo el contenido de un archivo:&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'fs'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;fs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;readFile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;archivo_grande.txt&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Terminó de leer el archivo&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Hola&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;El método &lt;code class=&quot;highlighter-rouge&quot;&gt;readFile&lt;/code&gt; es &lt;strong&gt;no bloqueante&lt;/strong&gt;, así que va a delegar la ejecución a otro &lt;strong&gt;hilo&lt;/strong&gt;. Pero ¿cómo sabemos cuándo terminó de leer el archivo?&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;readFile&lt;/code&gt; recibe una &lt;strong&gt;función&lt;/strong&gt; que es invocada cuando el &lt;strong&gt;hilo de apoyo&lt;/strong&gt; termina de leer el archivo. A esta técnica se le llama &lt;strong&gt;código asincrónico&lt;/strong&gt;, o &lt;strong&gt;código basado en eventos&lt;/strong&gt;, porque la &lt;strong&gt;función&lt;/strong&gt; no se ejecuta inmediatamente, sino que va a ser invocada en algún momento en el futuro.&lt;/p&gt;

&lt;p&gt;A la función que le pasamos al método &lt;code class=&quot;highlighter-rouge&quot;&gt;readFile&lt;/code&gt; se le conoce como un &lt;strong&gt;callback&lt;/strong&gt;, que en Español significa “devolver la llamada”.&lt;/p&gt;

&lt;p&gt;Si ejecutamos el código anterior vas a ver en pantalla &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;Hola&quot;&lt;/code&gt; antes de &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;Terminó de leer el archivo&quot;&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Utilizar &lt;strong&gt;I/O no bloqueante y eventos&lt;/strong&gt; es una forma muy eficiente de utilizar los recursos del sistema pero hace que el código sea más difícil de escribir y entender. Es por eso que la comunidad de &lt;a href=&quot;https://nodejs.org/en/&quot; target=&quot;_blank&quot;&gt;Node.js&lt;/a&gt; siempre está buscando formas de que el &lt;strong&gt;código asincrónico&lt;/strong&gt; se vea más como &lt;strong&gt;código sincrónico&lt;/strong&gt;. Ejemplos incluyen las &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Using_promises&quot; target=&quot;_blank&quot;&gt;Promesas&lt;/a&gt; y la más reciente &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function&quot; target=&quot;_blank&quot;&gt;función async&lt;/a&gt;.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Espero que este post te haya dado una idea sobre qué es concurrencia, qué son y cómo funcionan los hilos, qué es la concurrencia basada en eventos y qué es &lt;strong&gt;I/O no bloqueante&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;No es que un modelo de concurrencia sea superior al otro. Cada uno tiene sus ventajas y desventajas, también depende mucho del tipo de aplicación que estés desarrollando.&lt;/p&gt;

&lt;p&gt;Por ejemplo, &lt;a href=&quot;https://nodejs.org/en/&quot; target=&quot;_blank&quot;&gt;Node.js&lt;/a&gt; es ideal para aplicaciones que principalmente realizan operaciones de &lt;strong&gt;I/O&lt;/strong&gt;, como un sistema de streaming de video, por ejemplo.&lt;/p&gt;

&lt;p&gt;Los hilos, por otro lado, pueden ser muy eficientes en aplicaciones que realizan principalmente tareas de procesamiento.&lt;/p&gt;

&lt;hr /&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot;&gt;
      &lt;p&gt;En Español &lt;strong&gt;E/S&lt;/strong&gt; (&lt;strong&gt;Entrada/Salida&lt;/strong&gt;).&amp;nbsp;&lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:2&quot;&gt;
      &lt;p&gt;La implementación de referencia de Ruby (MRI), por ejemplo, no soporta la ejecución de varios threads en paralelo, así el computador tenga varios procesadores.&amp;nbsp;&lt;a href=&quot;#fnref:2&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name>Germán Escobar</name></author><summary type="html">En este post vamos ver qué es concurrencia, cuáles son los dos modelos más populares que existen actualmente y cómo la concurrencia afecta el código que escribes.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://blog.makeitreal.camp/assets/images/bg-images/concurrency.jpeg" /></entry><entry><title type="html">Turbolinks</title><link href="http://blog.makeitreal.camp/turbolinks/" rel="alternate" type="text/html" title="Turbolinks" /><published>2017-06-12T12:00:00-05:00</published><updated>2017-06-12T12:00:00-05:00</updated><id>http://blog.makeitreal.camp/turbolinks</id><content type="html" xml:base="http://blog.makeitreal.camp/turbolinks/">&lt;p&gt;En este post vamos a ver qué es &lt;strong&gt;Turbolinks&lt;/strong&gt; y lo que debes tener en cuenta para sacar el mayor provecho de esta increíble herramienta sin frustrate en el proceso.&lt;!-- more --&gt;&lt;/p&gt;

&lt;h2 id=&quot;qué-es-turbolinks&quot;&gt;¿Qué es Turbolinks?&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Turbolinks&lt;/strong&gt; es una gema incluida en &lt;a href=&quot;http://rubyonrails.org/&quot;&gt;Ruby on Rails&lt;/a&gt; que evita tener que recargar los archivos CSS y JavaScript cada vez que oprimes un link en tu aplicación, haciendo que las aplicaciones se sientan más rápidas y ágiles en el navegador.&lt;/p&gt;

&lt;p&gt;La forma en que funciona es la siguiente: en vez de recargar la página cuando se oprime un link, &lt;strong&gt;Turbolinks&lt;/strong&gt; intercepta el click, hace un llamado AJAX al servidor y reemplaza el cuerpo (body) de la página con la respuesta.&lt;/p&gt;

&lt;p&gt;Ingenioso ¿no? Con &lt;strong&gt;Turbolinks&lt;/strong&gt; tus aplicaciones se van a sentir casi como si estuviesen hechas con un framework JavaScript como Angular o React, pero sin la complejidad que eso implica.&lt;/p&gt;

&lt;p&gt;Además, &lt;strong&gt;Turbolinks&lt;/strong&gt; mantiene un caché de las últimas páginas visitadas y eso permite que esas páginas se puedan mostrar de forma inmediata sin hacer un llamado al servidor.&lt;/p&gt;

&lt;h2 id=&quot;los-retos-de-turbolinks&quot;&gt;Los retos de Turbolinks&lt;/h2&gt;

&lt;p&gt;Eso no significa que puedes ignorar &lt;strong&gt;Turbolinks&lt;/strong&gt; y todo va a funcionar correctamente. Al contrario, debido a que los archivos JavaScript no se recargan cuando navegas por la aplicación, existen varios retos que debes conocer y enfrentar.&lt;/p&gt;

&lt;h3 id=&quot;el-evento-ready&quot;&gt;El evento ready&lt;/h3&gt;

&lt;p&gt;El primero reto tiene que ver con el evento &lt;code class=&quot;highlighter-rouge&quot;&gt;$(document).ready&lt;/code&gt;, que normalmente se dispara cuando se ha terminado de cargar cada página.&lt;/p&gt;

&lt;p&gt;El problema es que &lt;strong&gt;Turbolinks&lt;/strong&gt; no dispara ese evento &lt;code class=&quot;highlighter-rouge&quot;&gt;ready&lt;/code&gt; cuando navegas por las páginas de la aplicación.&lt;/p&gt;

&lt;p&gt;Por ejemplo, si estás usando &lt;strong&gt;Turbolinks&lt;/strong&gt;, la siguiente alerta se mostraría sólo la primera vez que se carga una página, pero no en los demás cambios de página:&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ready&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Hola Mundo&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Esta es quizá la principal queja de las personas que no conocen &lt;strong&gt;Turbolinks&lt;/strong&gt;: que su código JavaScript no se está ejecutando al pasar de una página a otra.&lt;/p&gt;

&lt;p&gt;La solución es utilizar el evento &lt;code class=&quot;highlighter-rouge&quot;&gt;turbolinks:load&lt;/code&gt; que se dispara también en los cambios de página:&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;turbolinks:load&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Hola&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;De esta forma la alerta se mostraría la primera vez que se carga una página, pero también en los siguientes cambios de página.&lt;/p&gt;

&lt;h3 id=&quot;el-contexto-global&quot;&gt;El contexto global&lt;/h3&gt;

&lt;p&gt;El segundo reto al utilizar &lt;strong&gt;Turbolinks&lt;/strong&gt; es que todas las variables que almacenes en el contexto global de JavaScript van a permanecer entre páginas. Esto puede ser un problema o no dependiendo de la complejidad de tu código, pero es algo que debes tener en cuenta.&lt;/p&gt;

&lt;p&gt;Por ejemplo, si en una página definiste una variable llamada &lt;code class=&quot;highlighter-rouge&quot;&gt;miVariable&lt;/code&gt; en el contexto global, en las siguientes páginas esa variable va a seguir existiendo.&lt;/p&gt;

&lt;p&gt;La forma de evitar eso es con un poco de cuidado y organización, evitando al máximo contaminar el contexto global.&lt;/p&gt;

&lt;p&gt;Por ejemplo, un patrón que sigo en mis aplicaciones es el siguiente. En el archivo &lt;strong&gt;CoffeeScript&lt;/strong&gt; creo una clase con el código que necesito para la vista:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-coffeescript&quot;&gt;class EntriesView
  constructor: (options) -&amp;gt;
    # acá enlazo los eventos

window.EntriesView = EntriesView
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Y en la vista, al final, creo el objeto y le paso la información necesaria por el argumento del constructor:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;script&amp;gt;
  new EntriesView({});
&amp;lt;/script&amp;gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;De esa forma evito contaminar al máximo el contexto global y el código queda bien organizado.&lt;/p&gt;

&lt;h3 id=&quot;entendiendo-el-caché&quot;&gt;Entendiendo el caché&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Turbolinks&lt;/strong&gt; mantiene un caché de las páginas visitadas recientemente.&lt;/p&gt;

&lt;p&gt;Antes de navegar a una nueva página &lt;strong&gt;Turbolinks&lt;/strong&gt; guarda una copia de la página actual en caché. Esa copia no incluye los eventos o datos asociados a los elementos.&lt;/p&gt;

&lt;p&gt;El reto acá es el siguiente:&lt;/p&gt;

&lt;p&gt;Tu código JavaScript puede modificar la página cuando carga, y &lt;strong&gt;esa página modificada es la que se almacena en caché&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Luego, cuando se obtiene nuevamente del caché, el código JavaScript vuelve a correr y &lt;strong&gt;vuelve a modificar la página&lt;/strong&gt;. Eso puede ser lo que buscas o no, pero igual es algo que debes tener en cuenta.&lt;/p&gt;

&lt;p&gt;Siempre que escribas &lt;strong&gt;JavaScript&lt;/strong&gt; (o &lt;strong&gt;CoffeeScript&lt;/strong&gt;) piensa que esa página pudo haber sido recuperada del caché.&lt;/p&gt;

&lt;h2 id=&quot;conclusión&quot;&gt;Conclusión&lt;/h2&gt;

&lt;p&gt;Es sorprendente que &lt;strong&gt;Turbolinks&lt;/strong&gt; venga activado por defecto en las aplicaciones de Rails. Sería preferible que uno lo activara después de conocer cómo funciona y qué cosas tener en cuenta. Pero ahora ya lo sabes!&lt;/p&gt;

&lt;p&gt;¿En qué casos &lt;strong&gt;no&lt;/strong&gt; recomendaría &lt;strong&gt;Turbolinks&lt;/strong&gt;? Si tu aplicación requiere mucha interacción en el navegador mi recomendación sería utilizar un framework de JavaScript como React para el front.&lt;/p&gt;

&lt;p&gt;Si quieres más información de &lt;strong&gt;Turbolinks&lt;/strong&gt; mi recomendación es leer &lt;a href=&quot;https://github.com/turbolinks/turbolinks&quot; target=&quot;_blank&quot;&gt;la documentación de la gema&lt;/a&gt;, se aprende bastante!&lt;/p&gt;</content><author><name>Germán Escobar</name></author><summary type="html">En este post vamos a ver qué es Turbolinks y lo que debes tener en cuenta para sacar el mayor provecho de esta increíble herramienta sin frustrate en el proceso.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://blog.makeitreal.camp/assets/images/bg-images/turbolinks.jpeg" /></entry><entry><title type="html">Aprende a leer en código binario</title><link href="http://blog.makeitreal.camp/aprende-a-leer-en-codigo-binario/" rel="alternate" type="text/html" title="Aprende a leer en código binario" /><published>2017-05-30T12:00:00-05:00</published><updated>2017-05-30T12:00:00-05:00</updated><id>http://blog.makeitreal.camp/aprende-a-leer-en-codigo-binario</id><content type="html" xml:base="http://blog.makeitreal.camp/aprende-a-leer-en-codigo-binario/">&lt;p&gt;En dos años (2019) The Matrix cumplirá 20 años y aún sigue siendo de una de mis películas favoritas.&lt;!-- more --&gt;&lt;/p&gt;

&lt;p&gt;En la escena final, el protagonista, Neo, aprende a “ver” el código, lo que le permite derrotar con facilidad a los &lt;strong&gt;agentes&lt;/strong&gt;, programas del mundo digital cuidadosamente disfrazados de humanos.&lt;/p&gt;

&lt;p&gt;En este post no aprenderás a “ver” en código pero sí a “&lt;strong&gt;leer&lt;/strong&gt;” en código, en &lt;strong&gt;código binario&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Por ejemplo, lo más probable es que en este momento la siguiente cadena de unos y ceros no tenga el más mínimo significado para ti.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-none&quot;&gt;010011010110000101101011011001010010000001101001011101000010000001010010011001010110000101101100&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;No te preocupes! Al final de este post habrás aprendido que ahí dice muy claro:&lt;/p&gt;

&lt;p style=&quot;text-align: center&quot;&gt;&lt;strong&gt;Make it Real&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A cada uno de esos ceros y unos se les conoce como un &lt;strong&gt;bit&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;El primer paso para aprender a leer en &lt;strong&gt;código binario&lt;/strong&gt; es separar esos &lt;strong&gt;bits&lt;/strong&gt; en grupos de &lt;strong&gt;ocho&lt;/strong&gt;. A cada grupo de ocho &lt;strong&gt;bits&lt;/strong&gt; se le conoce como un &lt;strong&gt;byte&lt;/strong&gt;.&lt;/p&gt;

&lt;pre style=&quot;word-break: break-word;&quot;&gt;&lt;code style=&quot;word-break: break-word;&quot; class=&quot;language-none&quot;&gt;01001101 01100001 01101011 01100101 00100000 01101001 01110100 00100000 01010010 01100101 01100001 01101100&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Si cuentas los &lt;strong&gt;bytes&lt;/strong&gt; te darás cuenta hay doce. Doce! El mismo número de letras y espacios que hay en la cadena &lt;strong&gt;Make it Real&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Cada uno de esos &lt;strong&gt;bytes&lt;/strong&gt; representa un número en nuestro sistema decimal entre 0 a 255.&lt;/p&gt;

&lt;p&gt;Por ejemplo, el primer &lt;strong&gt;byte&lt;/strong&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;01100001&lt;/code&gt;, es el número decimal &lt;strong&gt;77&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;La forma más rápida de convertir un &lt;strong&gt;número binario&lt;/strong&gt; a un número decimal es con un &lt;a href=&quot;http://www.binaryhexconverter.com/binary-to-decimal-converter&quot; target=&quot;_blank&quot;&gt;convertidor online&lt;/a&gt;. Sin embargo, si quieres saber cómo se hace manualmente espera al final del post, no es difícil.&lt;/p&gt;

&lt;p&gt;Si convertimos todos los &lt;strong&gt;bytes&lt;/strong&gt; a decimal terminamos con los siguientes números:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-none&quot;&gt;77 97 107 101 32 105 116 32 82 101 97 108&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;¿Qué hacemos ahora con esos números? Para eso tenemos que aprender sobre el que yo considero el estándar más importante en toda la historia de la computación.&lt;/p&gt;

&lt;h2 id=&quot;ascii&quot;&gt;ASCII&lt;/h2&gt;

&lt;p&gt;ASCII (American Standard Code for Information Interchange) es un estándar desarrollado en los años 60’s para representar texto utilizando números.&lt;/p&gt;

&lt;p&gt;Algunos caracteres del estándar ASCII son los siguientes:&lt;/p&gt;

&lt;table class=&quot;table&quot;&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th class=&quot;text-center&quot;&gt;Carácter ASCII&lt;/th&gt;
      &lt;th class=&quot;text-center&quot;&gt;Decimal&lt;/th&gt;
      &lt;th class=&quot;text-center&quot;&gt;Binario&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
  	&lt;tr&gt;
      &lt;td class=&quot;text-center&quot;&gt;Espacio&lt;/td&gt;
      &lt;td class=&quot;text-center&quot;&gt;32&lt;/td&gt;
      &lt;td class=&quot;text-center&quot;&gt;00100000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class=&quot;text-center&quot;&gt;1&lt;/td&gt;
      &lt;td class=&quot;text-center&quot;&gt;49&lt;/td&gt;
      &lt;td class=&quot;text-center&quot;&gt;00110001&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class=&quot;text-center&quot;&gt;A&lt;/td&gt;
      &lt;td class=&quot;text-center&quot;&gt;65&lt;/td&gt;
      &lt;td class=&quot;text-center&quot;&gt;01000001&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td class=&quot;text-center&quot;&gt;a&lt;/td&gt;
      &lt;td class=&quot;text-center&quot;&gt;97&lt;/td&gt;
      &lt;td class=&quot;text-center&quot;&gt;01100001&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;En &lt;a href=&quot;http://www.ascii-code.com/&quot; target=&quot;_blank&quot;&gt;este enlace&lt;/a&gt; puedes encontrar la tabla completa.&lt;/p&gt;

&lt;p&gt;Si reemplazamos cada uno de los números en decimal por su respectivo caracter en ASCII, encontraremos el significado del código:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-none&quot;&gt;77 97 107 101 32 105 116 32 82 101 97 108
M  a  k   e      i   t      R  e   a  l&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;¡Eso es todo! Si quieres practicar intenta descifrar qué dice el siguiente código binario:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-none&quot;&gt;01001000011011110110110001100001001000000100110101110101011011100110010001101111&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Recuerda:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Partir en grupos de ocho (&lt;strong&gt;bytes&lt;/strong&gt;).&lt;/li&gt;
  &lt;li&gt;Convertir cada &lt;strong&gt;byte&lt;/strong&gt; en decimal.&lt;/li&gt;
  &lt;li&gt;Utilizar la &lt;a href=&quot;http://www.ascii-code.com/&quot; target=&quot;_blank&quot;&gt;tabla ASCII&lt;/a&gt; para convertir cada número a su respectivo caracter ASCII.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;¿Qué tal esta otra?&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-none&quot;&gt;010101100110010101101110001000000111100100100000011000010111000001110010011001010110111001100100011001010010000001100011011011110110111000100000011011100110111101110011011011110111010001110010011011110111001100100000011001010110111000100000010011010110000101101011011001010010000001101001011101000010000001010010011001010110000101101100001000000011101000101001&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;convertir-binario-a-decimal&quot;&gt;Convertir binario a decimal&lt;/h2&gt;

&lt;p&gt;Para convertir un número binario de ocho digitos (un &lt;strong&gt;byte&lt;/strong&gt;) a decimal sólo tienes que seguir estos pasos.&lt;/p&gt;

&lt;p&gt;Toma el número en binario, por ejemplo &lt;code class=&quot;highlighter-rouge&quot;&gt;00100000&lt;/code&gt;, y escribe los siguientes números debajo de cada dígito:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-none&quot;&gt;0   0   1   0   0   0   0   0
128 64  32  16  8   4   2   1&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Empieza por el 1 a la derecha y vas duplicando siempre el último número.&lt;/p&gt;

&lt;p&gt;Suma los números de &lt;strong&gt;la fila de abajo&lt;/strong&gt; cuyo dígito encima sea 1. En este caso el único 1 está sobre 32 así que la respuesta es &lt;strong&gt;32&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Veamos otro ejemplo.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-none&quot;&gt;0   0   1   0   0   1   1   0
128 64  32  16  8   4   2   1&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Los dígitos sobre el 2, 4 y 32 son 1, así que sumamos esos números: 2 + 4 + 32 = &lt;strong&gt;38&lt;/strong&gt;.&lt;/p&gt;</content><author><name>Germán Escobar</name></author><summary type="html">En dos años (2019) The Matrix cumplirá 20 años y aún sigue siendo de una de mis películas favoritas.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://blog.makeitreal.camp/assets/images/bg-images/the-matrix.jpg" /></entry><entry><title type="html">¿Qué hace diferente a Make it Real?</title><link href="http://blog.makeitreal.camp/que-hace-diferente-a-make-it-real/" rel="alternate" type="text/html" title="¿Qué hace diferente a Make it Real?" /><published>2017-05-20T12:00:00-05:00</published><updated>2017-05-20T12:00:00-05:00</updated><id>http://blog.makeitreal.camp/que-hace-diferente-a-make-it-real</id><content type="html" xml:base="http://blog.makeitreal.camp/que-hace-diferente-a-make-it-real/">&lt;p&gt;Cualquier persona puede aprender a programar por su cuenta. ¿Por qué pagar por un programa como el de &lt;a href=&quot;https://makeitreal.camp&quot; target=&quot;_blank&quot;&gt;Make it Real&lt;/a&gt; y qué lo hace diferente de cualquier otro programa?&lt;!-- more --&gt;&lt;/p&gt;

&lt;p&gt;Hace unos días hicimos un Hangout con varios estudiantes que se han graduado de &lt;a href=&quot;https://makeitreal.camp&quot; target=&quot;_blank&quot;&gt;Make it Real&lt;/a&gt; y que hoy en día tienen un empleo como desarrolladores Web. El video completo lo puedes encontrar en &lt;a href=&quot;https://www.youtube.com/watch?v=9egJqvsPBAo&quot; target=&quot;_blank&quot;&gt;este enlace&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Ese Hangout no sólo me hizo sentir muy orgulloso de nuestros alumnos, también me hizo reflexionar sobre el verdadero valor de nuestro programa y qué lo hace diferente a cualquier otro programa, no sólo en Latinoamérica, sino en cualquier otra parte del mundo.&lt;/p&gt;

&lt;h2 id=&quot;nuestro-programa&quot;&gt;Nuestro programa&lt;/h2&gt;

&lt;p&gt;En &lt;a href=&quot;https://makeitreal.camp&quot; target=&quot;_blank&quot;&gt;Make it Real&lt;/a&gt; hemos desarrollado un currículo apoyado de una plataforma de aprendizaje que cada persona puede hacer a su propio ritmo (con un límite de un año).&lt;/p&gt;

&lt;p&gt;Nuestro programa &lt;a href=&quot;https://makeitreal.camp/full-stack-online&quot; target=&quot;_blank&quot;&gt;Full Stack&lt;/a&gt;, por ejemplo, toma entre 600 y 1,100 horas de dedicación, dependiendo de los conocimientos previos de la persona.&lt;/p&gt;

&lt;p&gt;Pero quizá lo más valioso de nuestros programas y lo que lo hace diferente de cualquier otro programa son &lt;strong&gt;los mentores&lt;/strong&gt; y &lt;strong&gt;el acompañamiento&lt;/strong&gt; que reciben cada uno de nuestros estudiantes.&lt;/p&gt;

&lt;blockquote&gt;No se trata sólo de aprender a programar, se trata de sentirse apoyado en cada parte del proceso, ya sea para encontrar un empleo o convertirse en emprendedor tecnológico.&lt;/blockquote&gt;

&lt;h2 id=&quot;los-mentores&quot;&gt;Los mentores&lt;/h2&gt;

&lt;p&gt;Nuestro objetivo no es sólo que los estudiantes aprendan a escribir código, es que aprendan a escribir código legible y mantenible en el tiempo aplicando las mejores prácticas de desarrollo.&lt;/p&gt;

&lt;p&gt;Eso es algo que es muy difícil de aprender por cuenta propia. La retroalimentación que les brindamos a los estudiantes durante y después del programa es fundamental para acelerar su aprendizaje y que estén siempre mejorando.&lt;/p&gt;

&lt;p&gt;En los programas online de &lt;a href=&quot;https://makeitreal.camp&quot; target=&quot;_blank&quot;&gt;Make it Real&lt;/a&gt; cualquier estudiante puede solicitar asesoría de un mentor para recibir retroalimentación de su código, ayuda en un reto o simplemente para solucionar alguna duda o problema.&lt;/p&gt;

&lt;p&gt;Las asesorías no deben ser de temas relacionados con el programa, también ayudamos a los estudiantes en sus proyectos personales y en sus trabajos. De hecho creemos que esa es la mejor forma de aprender!&lt;/p&gt;

&lt;h2 id=&quot;el-acompañamiento&quot;&gt;El acompañamiento&lt;/h2&gt;

&lt;p&gt;No es sólo aprender a programar. Hemos desarrollado una metodología de acompañamiento con el objetivo de ayudar a cada estudiante a lograr su meta, ya sea encontrar un empleo o emprender en tecnología.&lt;/p&gt;

&lt;p&gt;La mayoría de programas abandonan a los estudiantes en el momento más difícil, cuando han terminado el programa y se van a enfrentar a su primer empleo o van a empezar a emprender.&lt;/p&gt;

&lt;p&gt;En &lt;a href=&quot;https://makeitreal.camp&quot; target=&quot;_blank&quot;&gt;Make it Real&lt;/a&gt; seguimos ayudando y guiando a nuestros egresados aún cuando han terminado el programa, especialmente durante su primer empleo. Eso no sólo es bueno para ellos, también es bueno para las empresas que los contratan porque no tienen que gastar tanto tiempo en capacitación y acompañamiento.&lt;/p&gt;

&lt;h2 id=&quot;no-es-para-todo-el-mundo&quot;&gt;No es para todo el mundo&lt;/h2&gt;

&lt;p&gt;En &lt;a href=&quot;https://makeitreal.camp&quot; target=&quot;_blank&quot;&gt;Make it Real&lt;/a&gt; estamos transformando la educación. Pero eso requiere también un cambio de mentalidad en cada persona.&lt;/p&gt;

&lt;p&gt;Desafortunadamente nuestro sistema educativo nos ha acostumbrado a ir a clase a que nos enseñen (ahora a ver videos) y nos digan exactamente qué hacer.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://makeitreal.camp&quot; target=&quot;_blank&quot;&gt;Make it Real&lt;/a&gt; está diseñado para personas que están dispuestas a apropiarse de su aprendizaje con la guía de mentores experimentados que los ayuden a acelerar su aprendizaje y lograr sus metas.&lt;/p&gt;</content><author><name>Germán Escobar</name></author><summary type="html">Cualquier persona puede aprender a programar por su cuenta. ¿Por qué pagar por un programa como el de Make it Real y qué lo hace diferente de cualquier otro programa?</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://blog.makeitreal.camp/assets/images/bg-images/the-path.jpg" /></entry><entry><title type="html">¿Por qué es tan difícil aprender a programar?</title><link href="http://blog.makeitreal.camp/por-que-es-tan-dificil-aprender-a-programar/" rel="alternate" type="text/html" title="¿Por qué es tan difícil aprender a programar?" /><published>2017-04-02T12:00:00-05:00</published><updated>2017-04-02T12:00:00-05:00</updated><id>http://blog.makeitreal.camp/por-que-es-tan-dificil-aprender-a-programar</id><content type="html" xml:base="http://blog.makeitreal.camp/por-que-es-tan-dificil-aprender-a-programar/">&lt;p&gt;Muchos dirían que aprender a programar es relativamente fácil. Sin embargo, después de ver a cientos de personas intentarlo, es claro que es un proceso muy frustrante para la mayoría. &lt;!-- more --&gt; ¿Qué hace que la programación sea tan difícil de aprender para algunas personas y tan fácil para otras?&lt;/p&gt;

&lt;p&gt;Antes de responder esta pregunta, te voy a pedir el favor de ordenar los siguientes números de menor a mayor:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-none&quot;&gt;8, 10 y 5&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Fácil ¿verdad? Ahora imagina que te pido escribir una serie de pasos que cualquier persona pueda seguir para ordenar &lt;em&gt;cualquier&lt;/em&gt; grupo de números de menor a mayor.&lt;/p&gt;

&lt;p&gt;En este punto es que se empieza a complicar porque ahora necesitas pensar de forma &lt;strong&gt;abstracta&lt;/strong&gt;. Ya no estamos hablando de los números 5, 8 y 10, estamos hablando de cualquier grupo de números, no sabes cuáles ni cuántos!&lt;/p&gt;

&lt;p&gt;De eso se trata la programación. Tomar un problema concreto (ordenar una lista de números) y crear una solución que se pueda generalizar (a cualquier lista de números). Pero esa no es la forma natural en la que pensamos, y de hecho es una de las razones por las que a muchas personas no les gustan las matemáticas!&lt;/p&gt;

&lt;p&gt;Una posible forma de ordenar una lista de números es la siguiente:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Busca el número menor de la lista.&lt;/li&gt;
  &lt;li&gt;Táchalo&lt;/li&gt;
  &lt;li&gt;Escríbelo debajo.&lt;/li&gt;
  &lt;li&gt;Repite el proceso hasta que todos los números de la lista original estén tachados.&lt;/li&gt;
  &lt;li&gt;Al final tendrás la lista ordenada debajo de los números tachados.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;A esto se le conoce como un &lt;strong&gt;algoritmo&lt;/strong&gt;: un proceso repetible para solucionar un problema específico.&lt;/p&gt;

&lt;p&gt;Pero pensar de forma &lt;strong&gt;abstracta&lt;/strong&gt; no es suficiente. Estamos asumiendo que la persona que repita este algoritmo sabe cómo buscar el número menor de una lista, sabe tacharlo, sabe que significa “escribirlo debajo” y sabe qué significa “repetir el proceso”.&lt;/p&gt;

&lt;p&gt;Al computador le debemos decir qué significan cada uno de estos pasos. No sólo eso, primero debemos saber qué sabe el computador. Esta es la parte más fácil de la programación: saber cómo se define una variable, cómo hacer condicional, un ciclo, etc.&lt;/p&gt;

&lt;blockquote&gt;Lo difícil es mezclar lo que el computador puede hacer con nuestro pensamiento abstracto para solucionar un problema de forma genérica.&lt;/blockquote&gt;

&lt;p&gt;Aunque las matemáticas que se necesitan para programar son mínimas (sumar, restar, multiplicar y dividir son suficientes para muchos problemas), las personas que han estudiado matemáticas se les facilita aprender a programar hasta cierto punto porque están acostumbrados a pensar de forma abstracta, están acostumbradas a trabajar con ecuaciones.&lt;/p&gt;

&lt;p&gt;Una ecuación no es más que una forma abstracta de pensar en números. Por ejemplo, la ecuación para sumar dos números es la siguiente:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;a + b
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;a&lt;/code&gt; y &lt;code class=&quot;highlighter-rouge&quot;&gt;b&lt;/code&gt; se pueden reemplazar por cualquier valor y el resultado es la suma de esos dos valores. Pero el simple hecho de pensar que &lt;code class=&quot;highlighter-rouge&quot;&gt;a&lt;/code&gt; y &lt;code class=&quot;highlighter-rouge&quot;&gt;b&lt;/code&gt; pueden ser cualquier número es todo un reto para las personas que no están acostumbradas a pensar de forma abstracta.&lt;/p&gt;

&lt;p&gt;En programación siempre estamos pensando de forma abstracta. No necesariamente en números, pero sí de forma abstracta.&lt;/p&gt;

&lt;p&gt;Un algoritmo es mucho más que una ecuación. Por ejemplo, sería extraño hablar de la ecuación para ordenar un grupo de números, por eso utilizamos un nombre más abstracto: un algoritmo.&lt;/p&gt;

&lt;h2 id=&quot;cualquier-persona-puede-aprender-a-programar&quot;&gt;Cualquier persona puede aprender a programar&lt;/h2&gt;

&lt;p&gt;Desarrollar este pensamiento abstracto es lo más difícil de la programación. Sin embargo, he visto a muchas personas desarrollarlo desde cero. No sólo eso, muchas de esas personas ahora tienen un empleo como programadores!&lt;/p&gt;

&lt;p&gt;Es sólo que las personas que no están acostumbradas a esta forma de pensamiento abstracto les toma más tiempo que las personas que lo tienen más desarrollado.&lt;/p&gt;

&lt;p&gt;Si quieres aprender a programar desde cero debes tener la actitud correcta. La motivación es importante, pero la motivación se agota fácilmente.&lt;/p&gt;

&lt;p&gt;Necesitas desarrollar una disciplina mientras adquieres el gusto por la programación. Debes saber que vas a necesitas cientos de horas de aprendizaje para lograr hacer las cosas más básicas. Y debes saber que habrán momentos de mucha frustración.&lt;/p&gt;

&lt;p&gt;Esa actitud, el tiempo suficiente y una buena guía es todo lo que necesitas para aprender a programar!&lt;/p&gt;</content><author><name>Germán Escobar</name></author><summary type="html">Muchos dirían que aprender a programar es relativamente fácil. Sin embargo, después de ver a cientos de personas intentarlo, es claro que es un proceso muy frustrante para la mayoría.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://blog.makeitreal.camp/assets/images/bg-images/hot-air-balloon-valley-sky-99551.jpg" /></entry><entry><title type="html">La nueva ciencia del aprendizaje</title><link href="http://blog.makeitreal.camp/la-nueva-ciencia-del-aprendizaje/" rel="alternate" type="text/html" title="La nueva ciencia del aprendizaje" /><published>2017-01-01T12:00:00-05:00</published><updated>2017-01-01T12:00:00-05:00</updated><id>http://blog.makeitreal.camp/la-nueva-ciencia-del-aprendizaje</id><content type="html" xml:base="http://blog.makeitreal.camp/la-nueva-ciencia-del-aprendizaje/">&lt;p&gt;Conoce cómo en Make it Real aplicamos los últimos hallazgos científicos para acelerar el proceso de aprendizaje y que tengas éxito en cualquiera de nuestros programas.&lt;!-- more --&gt;&lt;/p&gt;

&lt;p&gt;¿Qué diferencia a las personas que logran un desempeño excepcional en alguna disciplina? &lt;a href=&quot;https://en.wikipedia.org/wiki/K._Anders_Ericsson&quot; target=&quot;_blank&quot;&gt;Anders Ericsson&lt;/a&gt; ha estudiado esta pregunta por más de 30 años y sus hallazgos están resumidos en su nuevo libro &lt;a href=&quot;https://www.amazon.com/Peak-Secrets-New-Science-Expertise-ebook/dp/B011H56MKS&quot; target=&quot;_blank&quot;&gt;Peak: secretos de la nueva ciencia de la experticia&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Quizá la conclusión más importante del libro es que &lt;strong&gt;lo que diferencia a los mejores de cualquier disciplina es el tiempo y la forma en que practican, no un talento innato como muchos creen&lt;/strong&gt;. El libro desmitifica casos como el de &lt;a href=&quot;https://es.wikipedia.org/wiki/Wolfgang_Amadeus_Mozart&quot; target=&quot;_blank&quot;&gt;Mozart&lt;/a&gt; y &lt;a href=&quot;https://es.wikipedia.org/wiki/Michael_Jordan&quot; target=&quot;_blank&quot;&gt;Michael Jordan&lt;/a&gt;, y demuestra que ellos practicaron muchas más horas de lo que la gente cree, y que lo hicieron de la forma correcta.&lt;/p&gt;

&lt;p&gt;Sin embargo, Ericsson aclara que, en algunas disciplinas, la edad a la que se inicia y las características físicas son importantes, aunque no suficientes. &lt;strong&gt;La práctica adecuada mantenida por un largo periodo de tiempo es lo único que conduce al perfeccionamiento de cualquier disciplina&lt;/strong&gt;.&lt;/p&gt;

&lt;h2 id=&quot;práctica-deliberada&quot;&gt;Práctica deliberada&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/K._Anders_Ericsson&quot; target=&quot;_blank&quot;&gt;Ericsson&lt;/a&gt; (el autor del libro) es conocido por haber acuñado el término &lt;strong&gt;práctica deliberada&lt;/strong&gt; y la &lt;strong&gt;regla de las 10,000 horas&lt;/strong&gt;, que fue popularizada por &lt;a href=&quot;https://www.amazon.com/Outliers-Story-Success-Malcolm-Gladwell-ebook/dp/B002RI9PKO/ref=tmm_kin_swatch_0?_encoding=UTF8&amp;amp;qid=&amp;amp;sr=&quot; target=&quot;_blank&quot;&gt;Malcom Gladwell en su libro Outliers&lt;/a&gt;, y que dice que para dominar cualquier disciplina se necesitan al menos 10,000 horas de práctica. Pero no cualquier tipo de práctica, 10,000 horas de práctica deliberada.&lt;/p&gt;

&lt;p&gt;La práctica deliberada genera una tensión e incomodidad en aquellos que la realizan. Para un músico es ensayar esos 60 segundos más difíciles de una melodía. Para un deportista es repetir lo que más se les está dificultando una y otra vez. &lt;strong&gt;Para un programador es enfrentarse a un nuevo reto que nunca antes ha intentado&lt;/strong&gt;. La práctica deliberada te hace salir de tu zona de comfort pero te permite cruzar nuevos límites.&lt;/p&gt;

&lt;p&gt;Un elemento fundamental de la práctica deliberada es la &lt;strong&gt;retroalimentación&lt;/strong&gt;: saber si estás haciendo algo bien o mal. Para un músico, por ejemplo, es necesario que su profesor escuche y vea lo que su alumno está tocando y le diga qué está haciendo bien y qué está haciendo mal. Igual para los deportistas. Sin la retroalimentación adecuada no es posible mejorar.&lt;/p&gt;

&lt;p&gt;Otro elemento que Ericsson resalta en sus hallazgos es la de contar con un mentor que guíe al estudiante. Sí, es posible aprender por cuenta propia, pero un buen mentor puede solucionar cualquier duda, entender las fortalezas y debilidades de su alumno para guiarlo mejor en el aprendizaje y brindar apoyo en los momentos más difíciles.&lt;/p&gt;

&lt;p&gt;Por último, es importante definir unas metas claras, un plan para alcanzar esas metas y una forma de monitorear el progreso hacia esas metas. Ah, y alguna manera de mantener la motivación, aunque la disciplina es mucho más importante.&lt;/p&gt;

&lt;h2 id=&quot;make-it-real&quot;&gt;Make it Real&lt;/h2&gt;

&lt;p&gt;En Make it Real hemos diseñado una metodología de aprendizaje basada en los hallazgos sobre práctica deliberada. Nuestra filosofía es la de &lt;strong&gt;aprender haciendo&lt;/strong&gt;. Uno no aprende a programar viendo videos, uno aprende enfrentandose a nuevos retos que desarrollen la habilidad de solucionar problemas cada vez más complejos.&lt;/p&gt;

&lt;p&gt;El núcleo de nuestro programa son los retos y proyectos. Los retos son auto evaluados por nuestra plataforma de aprendizaje para brindarle a cada estudiante retroalimentación inmediata. Los retos generan esa tensión e incomodidad propia de la práctica deliberada, pero te va a permitir acelerar el aprendizaje. Además, después de cada reto existe una página de discusión con nuestra solución oficial, alternativas, conceptos y mejores prácticas que brindan una mayor retroalmentación.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/mir-challenge.png&quot; alt=&quot;Reto&quot; class=&quot;photo border&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;photo-description&quot;&gt;Reto de JavaScript sobre expresiones regulares.&lt;/p&gt;

&lt;p&gt;Los proyectos son más complejos para que pongas en práctica todo lo aprendido y son evaluados por mentores que brindan retroalimentación específica de lo que hiciste bien y lo que debes mejorar.&lt;/p&gt;

&lt;p&gt;Al final del programa hacemos entrevistas de prueba a los estudiantes y les revisamos su portafolio para la nueva etapa a la que se van a enfrentar. Las entrevistas no son fáciles pero le permiten saber a cada estudiante qué temas debe reforzar.&lt;/p&gt;

&lt;p&gt;En vez de crear contenido aleatorio, nuestros programas definen unos planes específicos de aprendizaje para que cada estudiante logre sus metas. El sistema de gamification le ayuda a los mentores y al estudiante a monitorear el progreso, que es un factor fundamental de la práctica deliberada.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/mir-evaluation.png&quot; alt=&quot;Evaluación de un reto&quot; class=&quot;photo&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Sin embargo, creemos que los más valioso del programa son los mentores, que están disponibles para solucionar las dudas de los estudiantes, guiarlos en su aprendizaje, hacer pair programming en sus proyectos, etc. Es la personalización completa del aprendizaje.&lt;/p&gt;

&lt;h2 id=&quot;el-perfil-de-los-estudiantes-exitosos&quot;&gt;El perfil de los estudiantes exitosos&lt;/h2&gt;

&lt;p&gt;Nosotros hacemos nuestro mejor esfuerzo para entregar programas de la más alta calidad validados por la nueva ciencia del aprendizaje. Sin embargo, la responsabilidad de adquirir estas nuevas habilidades es de cada uno de nuestros estudiantes.&lt;/p&gt;

&lt;p&gt;Los estudiantes que tienen éxito en nuestros programas son personas con las siguientes características:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Entienden que con práctica y determinación van a alcanzar sus metas.&lt;/li&gt;
  &lt;li&gt;No esperan entender todo al primer intento, pero saben que eventualmente lo harán.&lt;/li&gt;
  &lt;li&gt;Son optimistas y avanzan un reto a la vez.&lt;/li&gt;
  &lt;li&gt;Se apoyan de sus mentores para solucionar dudas y pedir retroalimentación.&lt;/li&gt;
  &lt;li&gt;No le temen (o superan el temor) a preguntar sobre los temas más básicos porque saben que es la única forma de aprender.&lt;/li&gt;
  &lt;li&gt;Tratan de mantenerse motivados y mantienen una disciplina en los momentos en que pierden la motivación.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Sabemos que nuestros programas tienen los elementos necesarios para que te conviertas en desarrollador Web y cada día trabajamos para mejorarlos. Muchos ya lo han logrado.&lt;/p&gt;

&lt;p&gt;Nuestro objetivo es guiarte en esas ~1000 primeras horas de práctica deliberada para que puedas encontrar un empleo y sigas aprendiendo. &lt;a href=&quot;http://www.makeitreal.camp/#programs&quot;&gt;Conoce nuestros programas online y presenciales, y aprende con los mejores&lt;/a&gt;!&lt;/p&gt;</content><author><name>Germán Escobar</name></author><summary type="html">Conoce cómo en Make it Real aplicamos los últimos hallazgos científicos para acelerar el proceso de aprendizaje y que tengas éxito en cualquiera de nuestros programas.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://blog.makeitreal.camp/assets/images/bg-images/deliberate-practice.jpeg" /></entry><entry><title type="html">Manejo de dependencias en Ruby con Bundler</title><link href="http://blog.makeitreal.camp/manejo-de-dependencias-en-ruby-con-bundler/" rel="alternate" type="text/html" title="Manejo de dependencias en Ruby con Bundler" /><published>2016-10-17T12:00:00-05:00</published><updated>2016-10-17T12:00:00-05:00</updated><id>http://blog.makeitreal.camp/manejo-de-dependencias-en-ruby-con-bundler</id><content type="html" xml:base="http://blog.makeitreal.camp/manejo-de-dependencias-en-ruby-con-bundler/">&lt;p&gt;&lt;a href=&quot;http://bundler.io/&quot; target=&quot;_blank&quot;&gt;Bundler&lt;/a&gt; es una manejador de dependencias para Ruby. Aunque viene incluido con Rails, &lt;a href=&quot;http://bundler.io/&quot; target=&quot;_blank&quot;&gt;Bundler&lt;/a&gt; no es exclusivo de Rails, lo puedes usar para manejar las dependencias de cualquier proyecto de Ruby.&lt;!-- more --&gt;&lt;/p&gt;

&lt;p&gt;La mayoría de los proyectos en los que vas a trabajar van a utilizar una o más librerías. Una librería no es más que código empaquetado que alguien publica y que puedes utilizar en tus proyectos. Todos los lenguajes de programación tienen alguna forma de crear, distribur y usar librerías. En Ruby, a las librerías se les conoce con el nombre de &lt;strong&gt;gemas&lt;/strong&gt;. Cualquier persona puede crear y publicar una gema.&lt;/p&gt;

&lt;p&gt;Instalar una gema en tu máquina es muy fácil, solo debes ejectuar el comando &lt;code&gt;gem install&lt;/code&gt; seguido del nombre de la gema. Por ejemplo, para instalar Ruby on Rails puedes ejecutar:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-none&quot;&gt;$ gem install rails&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Este comando instalaría la versión más reciente de Rails, pero si deseas instalar otra versión lo puedes hacer con la opción &lt;code&gt;-v&lt;/code&gt;. Por ejemplo:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-none&quot;&gt;$ gem install rails -v 4.2.7&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;bundler&quot;&gt;Bundler&lt;/h2&gt;

&lt;p&gt;Instalar individualmente cada una de las gemas de las que depende un proyecto puede ser muy engorroso, además de que sería necesario mantener una documentación actualizada con la lista de gemas y la versión de cada una por si cambiamos de máquina o entra un nuevo integrante a nuestro equipo.&lt;/p&gt;

&lt;p&gt;El segundo problema es que puedes tener varias versiones de la misma gema instalada. Por defecto Ruby utiliza la última versión de la gema, pero es posible que esa no sea la que tu proyecto necesite.&lt;/p&gt;

&lt;p&gt;Veamos cómo &lt;a href=&quot;http://bundler.io/&quot; target=&quot;_blank&quot;&gt;Bundler&lt;/a&gt; nos ayuda a solucionar estos problemas.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://bundler.io/&quot; target=&quot;_blank&quot;&gt;Bundler&lt;/a&gt; es una gema, así que el primero paso es instalarlo con el siguiente comando:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-none&quot;&gt;$ gem install bundler&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Para definir las dependencias de nuestro proyecto creamos un archivo de texto llamado &lt;code&gt;Gemfile&lt;/code&gt; (sin extensión) en el que vamos a listar las gemas de las que depende nuestro proyecto:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;source 'https://rubygems.org'

gem 'nokogiri'
gem 'rack', '~&amp;gt;1.1'
gem 'sinatra', '1.4.7'&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;La primera línea le dice a Bundler la URL del servidor desde donde se deben instalar las gemas. &lt;a href=&quot;https://rubygems.org/&quot; target=&quot;_blank&quot;&gt;RubyGems&lt;/a&gt; es el servicio de Ruby en donde están almacenadas todas gemas públicas.&lt;/p&gt;

&lt;p&gt;Las demás líneas definen las gemas de las que depende nuestro proyecto. Si omites la versión -como en el caso de nokogiri arriba- &lt;a href=&quot;http://bundler.io/&quot; target=&quot;_blank&quot;&gt;Bundler&lt;/a&gt; asume que deseas utilizar la última versión disponible. Existen varias formas de especificar la versión, veamos algunos ejemplos:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;gem 'rails', '4.2.7' # la versión 4.2.7 exactamente&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;gem 'rails', '&amp;gt;=4.2.7' # cualquier versión igual o mayor que 4.2.7&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;gem 'rails', '&amp;gt;=4.2.7', '&amp;lt;5.0.0' # igual o mayor que 4.2.7, pero menor que 5.0.0&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Los siguientes dos son casos especiales pero muy comunes, de hecho es una muy buena práctica defnir las versiones de esta forma:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;gem 'rails', '~&amp;gt;4.2.7' # igual o mayor que 4.2.7, pero menor que 4.3.0&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;gem 'rails', '~&amp;gt;4.2' # igual o mayor que 4.2.0, pero menor que 5.0.0&lt;/code&gt;&lt;/pre&gt;

&lt;div class=&quot;well&quot;&gt;
  &lt;p&gt;La mayoría de gemas utilizan el siguiente esquema de versionamiento: dada una version &lt;code&gt;X.Y.Z&lt;/code&gt;, &lt;code&gt;X&lt;/code&gt; se incrementa cuando hay &lt;strong&gt;cambios mayores&lt;/strong&gt; que son incompatibles con versiones anteriores, &lt;code&gt;Y&lt;/code&gt; se incrementa cuando hay &lt;strong&gt;nuevas funcionalidades&lt;/strong&gt; que son compatibles con versiones anteriores, &lt;code&gt;Z&lt;/code&gt; se incrementa cuando se &lt;strong&gt;solucionan bugs&lt;/strong&gt; y sigue siendo compatible con versiones anteriores. &lt;/p&gt;

  &lt;p&gt;A esto se le conoce como &lt;a href=&quot;http://semver.org/&quot; target=&quot;_blank&quot;&gt;versionamiento semántico&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;

&lt;h2 id=&quot;cargar-gemas-de-github-directamente&quot;&gt;Cargar gemas de Github directamente&lt;/h2&gt;

&lt;p&gt;También es posible cargar una gema de su repositorio de Github directamente:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;gem 'papertrail', github: 'germanescobar/papertrail'&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;En este caso se asumiría que quieres cargar el último commit de la rama &lt;code&gt;master&lt;/code&gt;, pero puedes especificar cualquier rama:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;gem 'papertrail', github: 'germanescobar/papertrail' branch: 'my-branch'&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Esto es muy útil cuando necesitas funcionalidad que aún no está en la última versión de la gema, o cuando necesitas hacer cambios propios a la gema (p.e. para solucionar algún bug).&lt;/p&gt;

&lt;h2 id=&quot;instalar-las-gemas&quot;&gt;Instalar las gemas&lt;/h2&gt;

&lt;p&gt;Una vez que tienes las gemas definidas en el &lt;code&gt;Gemfile&lt;/code&gt;, puedes instalarlas en tu máquina local con el siguiente comando:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-none&quot;&gt;$ bundle install&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Este comando crea un archivo &lt;code&gt;Gemfile.lock&lt;/code&gt; con las versiones de las gemas que se van a utilizar en el proyecto. Es buena práctica agregar este archivo al sistema de control de versiones. Recuerda volver a ejecutar este comando cada vez que hagas cambios al archivo &lt;code&gt;Gemfile&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;configurar-la-aplicación&quot;&gt;Configurar la aplicación&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Nota:&lt;/strong&gt; Esto solo es necesario cuando &lt;strong&gt;no&lt;/strong&gt; estás utilizando Ruby on Rails.&lt;/p&gt;

&lt;p&gt;El último paso es agregar la siguiente línea al punto de entrada de tu aplicación para asegurar que todas las gemas sean encontradas:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;require 'bundler/setup'
# requiere las gemas que necesites normalmente

# el resto de tu aplicación ...&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Si tu aplicación necesita muchos &lt;code&gt;require&lt;/code&gt; puedes utilizar la siguiente línea para que &lt;a href=&quot;http://bundler.io/&quot; target=&quot;_blank&quot;&gt;Bundler&lt;/a&gt; lo haga por ti:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;require 'bundler/setup'
Bundler.require(:default)

# el resto de tu aplicación ...&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;usando-grupos&quot;&gt;Usando grupos&lt;/h2&gt;

&lt;p&gt;Con &lt;a href=&quot;http://bundler.io/&quot; target=&quot;_blank&quot;&gt;Bundler&lt;/a&gt; puedes agrupar tus dependencias y de esa forma realizar operaciones sobre un grupo entero. Veamos el siguiente &lt;code&gt;Gemfile&lt;/code&gt; de ejemplo:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;# Estas gemas están en el grupo :default
gem 'nokogiri'
gem 'sinatra'

gem 'wirble', :group =&amp;gt; :development

group :test do
  gem 'faker'
  gem 'rspec'
end

group :test, :development do
  gem 'capybara'
  gem 'rspec-rails'
end

gem 'cucumber', :group =&amp;gt; [:cucumber, :test]&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ruby on Rails utiliza la agrupación de dependencias de &lt;a href=&quot;http://bundler.io/&quot; target=&quot;_blank&quot;&gt;Bundler&lt;/a&gt; para definir diferentes ambientes de la aplicación (desarrollo, producción y pruebas). Puedes hacer lo mismo en otros proyectos que no sean de Rails.&lt;/p&gt;

&lt;p&gt;Por ejemplo, para requerir todas las gemas que están en el grupo &lt;code&gt;:default&lt;/code&gt; y &lt;code&gt;:development&lt;/code&gt; puedes hacer lo siguiente:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-ruby&quot;&gt;require 'bundler/setup'
Bundler.require(:default, :development)

# el resto de tu aplicación ...&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;conclusión&quot;&gt;Conclusión&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://bundler.io/&quot; target=&quot;_blank&quot;&gt;Bundler&lt;/a&gt; es quizá una de las herramientas más importantes del ecosistema de Ruby, y de la programación en general porque inspiró otros sistemas de manejo de dependencias como &lt;a href=&quot;https://www.npmjs.com/&quot; target=&quot;_blank&quot;&gt;npm&lt;/a&gt; (en Node JS) y &lt;a href=&quot;https://pypi.python.org/pypi/pip&quot; target=&quot;_blank&quot;&gt;pip&lt;/a&gt; (en Python).&lt;/p&gt;

&lt;p&gt;Espero que este post te haya ayudado a aclarar qué es &lt;a href=&quot;http://bundler.io/&quot; target=&quot;_blank&quot;&gt;Bundler&lt;/a&gt; y su rol en Ruby on Rails; y que de esta forma puedas aprovechar todo su potencial!&lt;/p&gt;</content><author><name>Germán Escobar</name></author><summary type="html">Bundler es una manejador de dependencias para Ruby. Aunque viene incluido con Rails, Bundler no es exclusivo de Rails, lo puedes usar para manejar las dependencias de cualquier proyecto de Ruby.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://blog.makeitreal.camp/assets/images/bg-images/bundler.jpg" /></entry><entry><title type="html">Manejadores de versiones para Ruby</title><link href="http://blog.makeitreal.camp/manejadores-de-versiones-en-ruby/" rel="alternate" type="text/html" title="Manejadores de versiones para Ruby" /><published>2016-10-16T12:00:00-05:00</published><updated>2016-10-16T12:00:00-05:00</updated><id>http://blog.makeitreal.camp/manejadores-de-versiones-en-ruby</id><content type="html" xml:base="http://blog.makeitreal.camp/manejadores-de-versiones-en-ruby/">&lt;p&gt;Un manejador de versiones para Ruby te permite instalar varias versiones de Ruby en tu máquina y cambiar entre versiones fácilmente.&lt;!-- more --&gt;&lt;/p&gt;

&lt;p&gt;Pero ¿para qué quisiéramos tener instaladas varias versiones de Ruby?&lt;/p&gt;

&lt;p&gt;Existen dos razones. La primera es que, si tienes proyectos en producción, es una buena práctica utilizar la misma versión de Ruby en tu ambiente local. Por ejemplo, si uno de tus proyectos utiliza la versión &lt;code&gt;2.2.1&lt;/code&gt; en producción y otro proyecto la &lt;code&gt;2.3.1&lt;/code&gt;, deberías poder cambiar entre esas dos versiones fácilmente en tu ambiente local dependiendo del proyecto en el que vayas a trabajar.&lt;/p&gt;

&lt;p&gt;La segunda razón es poder probar diferentes versiones de Ruby sin necesidad de estar desinstalando y reinstalando versiones, por ejemplo para probar tus proyectos con otras versiones, o simplemente para jugar con las nuevas características de la última versión.&lt;/p&gt;

&lt;p&gt;Existen dos manejadores de versiones que son muy populares y en los que nos vamos a enfocar en este post: &lt;a href=&quot;https://rvm.io/&quot; target=&quot;_blank&quot;&gt;RVM&lt;/a&gt; (Ruby Version Manager) y &lt;a href=&quot;https://github.com/rbenv/rbenv&quot; target=&quot;_blank&quot;&gt;rbenv&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;rvm&quot;&gt;RVM&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://rvm.io/&quot; target=&quot;_blank&quot;&gt;RVM&lt;/a&gt; fue el primer manejador de versiones de Ruby y es el que personalmente uso. Para instalarlo en Linux y MacOS sigue &lt;a href=&quot;https://rvm.io/rvm/install&quot; target=&quot;_blank&quot;&gt;estas instrucciones&lt;/a&gt; (para Windows utiliza &lt;a href=&quot;http://blog.developwithpassion.com/2012/03/30/installing-rvm-with-cygwin-on-windows/&quot; target=&quot;_blank&quot;&gt;este otro enlace&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;Los comandos principales de &lt;a href=&quot;https://rvm.io/&quot; target=&quot;_blank&quot;&gt;RVM&lt;/a&gt; son:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;rvm list&lt;/code&gt;: lista todas las versiones de Ruby instaladas en tu máquina.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;rvm install [version_de_ruby]&lt;/code&gt;: instala una nueva versión de Ruby. Por ejemplo:
    &lt;pre&gt;&lt;code class=&quot;language-none&quot;&gt;$ rvm install 2.3.1&lt;/code&gt;&lt;/pre&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code&gt;rvm use [version_de_ruby]&lt;/code&gt;: utiliza la versión que especifiques de Ruby. Por ejemplo:
    &lt;pre&gt;&lt;code class=&quot;language-none&quot;&gt;$ rvm use 2.3.1&lt;/code&gt;&lt;/pre&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Para definir la versión por defecto que se carga cuando abres la línea de comandos ejecuta &lt;code&gt;rvm use --default [version_de_ruby]&lt;/code&gt;. Por ejemplo, para usar y definir por defecto la versión &lt;code&gt;2.3.1&lt;/code&gt; utiliza el siguiente comando:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-none&quot;&gt;$ rvm use --default 2.3.1&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Veamos algunos de estos comandos en acción. Empecemos por &lt;code&gt;rvm list&lt;/code&gt; que lista las versiones que están instaladas en nuestro sistema:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-none&quot;&gt;$ rvm list

   ruby-2.2.0 [ x86_64 ]
   ruby-2.2.1 [ x86_64 ]
 * ruby-2.3.0 [ x86_64 ]
=&amp;gt; ruby-2.3.1 [ x86_64 ]

# =&amp;gt; - current
# =* - current &amp;amp;&amp;amp; default
#  * - default&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;En este caso tenemos 4 versiones de Ruby instaladas. La que estamos usando actualmente se identifica por el prefijo &lt;code&gt;=&amp;gt;&lt;/code&gt;, en este caso la &lt;code&gt;2.3.1&lt;/code&gt;, y la que se utiliza por defecto se identifica por el prefijo &lt;code&gt;*&lt;/code&gt;, en este caso la &lt;code&gt;2.3.0&lt;/code&gt;. Podemos verificar que la versión que estamos usando es efectivamente la &lt;code&gt;2.3.1&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-none&quot;&gt;$ ruby -v
ruby 2.3.1p112 (2016-04-26 revision 54768) [x86_64-darwin15]&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Cambiemos ahora a la versión &lt;code&gt;2.2.1&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-none&quot;&gt;$ rvm use 2.2.1
Using /Users/germanescobar/.rvm/gems/ruby-2.2.1

$ ruby -v
ruby 2.2.1p85 (2015-02-26 revision 49769) [x86_64-darwin14]&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br /&gt;
La ventaja de &lt;a href=&quot;https://rvm.io/&quot; target=&quot;_blank&quot;&gt;RVM&lt;/a&gt; es que trae todo incluido cuando lo instalas: el manejador de versiones, el instalador de nuevas versiones de Ruby y el administrador para grupos de gemas (un tema que veremos más adelante). Sin embargo, muchos argumentan que eso va en contra de la filosofía Unix, en donde cada programa debería hacer una sola cosa bien&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

&lt;h2 id=&quot;rbenv&quot;&gt;rbenv&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/rbenv/rbenv&quot; target=&quot;_blank&quot;&gt;rbenv&lt;/a&gt; es otro manejador de versiones de Ruby y hoy es mucho más popular que &lt;a href=&quot;https://rvm.io/&quot; target=&quot;_blank&quot;&gt;RVM&lt;/a&gt; según &lt;a href=&quot;https://www.ruby-toolbox.com/categories/ruby_version_management&quot; target=&quot;_blank&quot;&gt;The Ruby Toolbox&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/rbenv/rbenv&quot; target=&quot;_blank&quot;&gt;rbenv&lt;/a&gt; es solo un manejador de versiones y utiliza una arquitectura basada en plugins para agregar más funcionalidad. Eso quiere decir que si quieres instalar una nueva versión de Ruby debes hacerlo manualmente o instalar primero un plugin de &lt;a href=&quot;https://github.com/rbenv/rbenv&quot; target=&quot;_blank&quot;&gt;rbenv&lt;/a&gt; llamado &lt;a href=&quot;https://github.com/rbenv/ruby-build&quot; target=&quot;_blank&quot;&gt;ruby-build&lt;/a&gt; (solo debes instalarlo una única vez).&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/rbenv/rbenv&quot; target=&quot;_blank&quot;&gt;rbenv&lt;/a&gt; solo soporta Linux y MacOS y lo puedes instalar siguiendo las instrucciones en &lt;a href=&quot;https://github.com/rbenv/rbenv#installation&quot; target=&quot;_blank&quot;&gt;este enlace&lt;/a&gt;. Existe una &lt;a href=&quot;https://github.com/nak1114/rbenv-win&quot; target=&quot;_blank&quot;&gt;versión para Windows&lt;/a&gt; pero realmente no sé qué tan fácil sea de instalar.&lt;/p&gt;

&lt;p&gt;Los comandos principales de &lt;a href=&quot;https://github.com/rbenv/rbenv&quot; target=&quot;_blank&quot;&gt;rbenv&lt;/a&gt; son:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;rbenv versions&lt;/code&gt;: lista las versiones de Ruby instaladas en tu máquina.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;rbenv version&lt;/code&gt;: muestra la versión de Ruby activa (la que se está usando actualmente).&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;rbenv shell [version]&lt;/code&gt;: utiliza la versión que especifiques de Ruby. Por ejemplo:
    &lt;pre&gt;&lt;code&gt;$ rbenv shell 2.3.1&lt;/code&gt;&lt;/pre&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code&gt;rbenv global [version]&lt;/code&gt;: define la versión por defecto. Por ejemplo:
    &lt;pre&gt;&lt;code&gt;$ rbenv global 2.3.1&lt;/code&gt;&lt;/pre&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code&gt;rbenv rehash&lt;/code&gt;: este comando se debe ejecutar cuando se instala una nueva versión de Ruby o alguna gema que incluya nuevos comandos para la consola.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Nota&lt;/strong&gt;: Puedes encontrar todos los comandos con ejemplos en &lt;a href=&quot;https://github.com/rbenv/rbenv#command-reference&quot; target=&quot;_blank&quot;&gt;este enlace&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Para instalar una nueva versión de Ruby -después de haber instalado el plugin &lt;code&gt;ruby-build&lt;/code&gt;- utiliza el comando &lt;code&gt;rbenv install [version_de_ruby]&lt;/code&gt;. Por ejemplo:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ rbenv install 2.2.0&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;La ventaja de &lt;a href=&quot;https://github.com/rbenv/rbenv&quot; target=&quot;_blank&quot;&gt;rbenv&lt;/a&gt; es que es más liviano que &lt;a href=&quot;https://rvm.io/&quot; target=&quot;_blank&quot;&gt;RVM&lt;/a&gt; y que utiliza una forma diferente de manejar las versiones que, muchos argumentan, es mejor (aunque seguramente debatible).&lt;/p&gt;

&lt;h2 id=&quot;definir-la-versión-de-ruby-por-proyecto&quot;&gt;Definir la versión de Ruby por proyecto&lt;/h2&gt;

&lt;p&gt;Una buena práctica es crear un archivo llamado &lt;code&gt;.ruby-version&lt;/code&gt; en la raíz de cada uno de tus proyectos que defina la versión de Ruby que se debe usar para ese proyecto. De esa forma, cuando entres a esa carpeta, tanto &lt;a href=&quot;https://rvm.io/&quot; target=&quot;_blank&quot;&gt;RVM&lt;/a&gt; como &lt;a href=&quot;https://github.com/rbenv/rbenv&quot; target=&quot;_blank&quot;&gt;rbenv&lt;/a&gt; van a utilizar la versión correcta sin necesidad de que tengas que hacer el cambio explícito.&lt;/p&gt;

&lt;p&gt;Aunque el archivo solo contiene la versión que se debe usar y podrías crearlo manualmente, tanto &lt;a href=&quot;https://rvm.io/&quot; target=&quot;_blank&quot;&gt;RVM&lt;/a&gt; como &lt;a href=&quot;https://github.com/rbenv/rbenv&quot; target=&quot;_blank&quot;&gt;rbenv&lt;/a&gt; tienen comandos que lo crean por ti:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ rvm --ruby-version use 2.3.1&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;$ rbenv local 2.3.1&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Puedes agregar este archivo a Git y de esa forma todos los integrantes de tu equipo van a utilizar la misma versión en sus ambientes de desarrollo local (si están utilizando algún manejador de versiones).&lt;/p&gt;

&lt;h2 id=&quot;grupos-de-gemas-gemsets&quot;&gt;Grupos de gemas (gemsets)&lt;/h2&gt;

&lt;p&gt;Una funcionalidad que incluye &lt;a href=&quot;https://rvm.io/&quot; target=&quot;_blank&quot;&gt;RVM&lt;/a&gt;, y que &lt;a href=&quot;https://github.com/rbenv/rbenv&quot; target=&quot;_blank&quot;&gt;rbenv&lt;/a&gt; argumenta que no se necesita (aunque se puede incluir &lt;a href=&quot;https://github.com/jf/rbenv-gemset&quot; target=&quot;_blank&quot;&gt;con un plugin&lt;/a&gt;), es el manejo de los grupos de gemas (gemsets).&lt;/p&gt;

&lt;p&gt;Las gemas son las librerías de Ruby. Una gema se instala con el comando &lt;code&gt;gem install [nombre_de_la_gema]&lt;/code&gt;. Por ejemplo:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ gem install rails&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ese comando instalaría la versión más reciente de Rails, si queremos otra versión lo podemos hacer con la opción &lt;code&gt;-v&lt;/code&gt;. Por ejemplo:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ gem install rails -v 4.2.7&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Una buena práctica es aislar las gemas de tu proyecto para que no se generen conflictos con otras versiones de las mismas gemas. Para eso &lt;a href=&quot;https://rvm.io/&quot; target=&quot;_blank&quot;&gt;RVM&lt;/a&gt; nos permite crear &lt;strong&gt;gemsets&lt;/strong&gt;. Los comandos que necesitas conocer son:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;rvm gemset list&lt;/code&gt;: lista los gemsets para cada una de las versiones de Ruby que tengamos instaladas.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;rvm gemset create [nombre_del_gemset]&lt;/code&gt;: crea un gemset con el nombre que definamos. Por ejemplo, el siguiente comando crea un gemset llamado &lt;code&gt;rails4&lt;/code&gt;:
    &lt;pre&gt;&lt;code&gt;$ rvm gemset create rails4&lt;/code&gt;&lt;/pre&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code&gt;rvm gemset use [nombre_del_gemset]&lt;/code&gt;: utiliza un gemset. Por ejemplo:
    &lt;pre&gt;&lt;code&gt;$ rvm gemset use rails4&lt;/code&gt;&lt;/pre&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code&gt;rvm gemset delete [nombre_del_gemset]&lt;/code&gt;: elimina un gemset. Por ejemplo:
    &lt;pre&gt;&lt;code&gt;$ rvm gemset delete rails4&lt;/code&gt;&lt;/pre&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Muchos argumentan, y estoy de acuerdo, en que &lt;a href=&quot;http://bundler.io/&quot; target=&quot;_blank&quot;&gt;Bundler&lt;/a&gt; es una mejor forma de aislar (y manejar) las gemas de nuestros proyectos y que ya no son necesarios los gemsets. De hecho Rails viene con &lt;a href=&quot;http://bundler.io/&quot; target=&quot;_blank&quot;&gt;Bundler&lt;/a&gt; incluido. Sin embargo, es bueno que sepas que los &lt;strong&gt;gemsets&lt;/strong&gt; existen.&lt;/p&gt;

&lt;h2 id=&quot;conclusión&quot;&gt;Conclusión&lt;/h2&gt;

&lt;p&gt;Tanto &lt;a href=&quot;https://rvm.io/&quot; target=&quot;_blank&quot;&gt;RVM&lt;/a&gt; como &lt;a href=&quot;https://github.com/rbenv/rbenv&quot; target=&quot;_blank&quot;&gt;rbenv&lt;/a&gt; intentan solucionar el mismo problema y los dos ofrecen una funcionalidad muy similar. Sin embargo, si tuviera que elegir alguno de los dos continuaría con &lt;a href=&quot;https://rvm.io/&quot; target=&quot;_blank&quot;&gt;RVM&lt;/a&gt; aunque &lt;a href=&quot;http://www.rubyinside.com/rbenv-a-simple-new-ruby-version-management-tool-5302.html&quot; target=&quot;_blank&quot;&gt;la Internets argumente lo contrario&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;No importa cuál escojas, lo importante es que instales y comiences a utilizar alguno porque más adelante lo agradecerás.&lt;/p&gt;

&lt;hr /&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot;&gt;
      &lt;p&gt;Existen otros argumentos en contra de RVM pero no son relevantes para efectos prácticos de este post.&amp;nbsp;&lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name>Germán Escobar</name></author><summary type="html">Un manejador de versiones para Ruby te permite instalar varias versiones de Ruby en tu máquina y cambiar entre versiones fácilmente.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://blog.makeitreal.camp/assets/images/bg-images/ruby-version-management.jpg" /></entry></feed>